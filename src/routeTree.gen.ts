/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SubmitImport } from './routes/submit'
import { Route as ShowcaseImport } from './routes/showcase'
import { Route as ReportsImport } from './routes/reports'
import { Route as DevelopmentImport } from './routes/development'
import { Route as IndexImport } from './routes/index'
import { Route as ReportsIndexImport } from './routes/reports.index'
import { Route as ReportsReportIdImport } from './routes/reports.$reportId'

// Create/Update Routes

const SubmitRoute = SubmitImport.update({
  id: '/submit',
  path: '/submit',
  getParentRoute: () => rootRoute,
} as any)

const ShowcaseRoute = ShowcaseImport.update({
  id: '/showcase',
  path: '/showcase',
  getParentRoute: () => rootRoute,
} as any)

const ReportsRoute = ReportsImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => rootRoute,
} as any)

const DevelopmentRoute = DevelopmentImport.update({
  id: '/development',
  path: '/development',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ReportsIndexRoute = ReportsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ReportsRoute,
} as any)

const ReportsReportIdRoute = ReportsReportIdImport.update({
  id: '/$reportId',
  path: '/$reportId',
  getParentRoute: () => ReportsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/development': {
      id: '/development'
      path: '/development'
      fullPath: '/development'
      preLoaderRoute: typeof DevelopmentImport
      parentRoute: typeof rootRoute
    }
    '/reports': {
      id: '/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsImport
      parentRoute: typeof rootRoute
    }
    '/showcase': {
      id: '/showcase'
      path: '/showcase'
      fullPath: '/showcase'
      preLoaderRoute: typeof ShowcaseImport
      parentRoute: typeof rootRoute
    }
    '/submit': {
      id: '/submit'
      path: '/submit'
      fullPath: '/submit'
      preLoaderRoute: typeof SubmitImport
      parentRoute: typeof rootRoute
    }
    '/reports/$reportId': {
      id: '/reports/$reportId'
      path: '/$reportId'
      fullPath: '/reports/$reportId'
      preLoaderRoute: typeof ReportsReportIdImport
      parentRoute: typeof ReportsImport
    }
    '/reports/': {
      id: '/reports/'
      path: '/'
      fullPath: '/reports/'
      preLoaderRoute: typeof ReportsIndexImport
      parentRoute: typeof ReportsImport
    }
  }
}

// Create and export the route tree

interface ReportsRouteChildren {
  ReportsReportIdRoute: typeof ReportsReportIdRoute
  ReportsIndexRoute: typeof ReportsIndexRoute
}

const ReportsRouteChildren: ReportsRouteChildren = {
  ReportsReportIdRoute: ReportsReportIdRoute,
  ReportsIndexRoute: ReportsIndexRoute,
}

const ReportsRouteWithChildren =
  ReportsRoute._addFileChildren(ReportsRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/development': typeof DevelopmentRoute
  '/reports': typeof ReportsRouteWithChildren
  '/showcase': typeof ShowcaseRoute
  '/submit': typeof SubmitRoute
  '/reports/$reportId': typeof ReportsReportIdRoute
  '/reports/': typeof ReportsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/development': typeof DevelopmentRoute
  '/showcase': typeof ShowcaseRoute
  '/submit': typeof SubmitRoute
  '/reports/$reportId': typeof ReportsReportIdRoute
  '/reports': typeof ReportsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/development': typeof DevelopmentRoute
  '/reports': typeof ReportsRouteWithChildren
  '/showcase': typeof ShowcaseRoute
  '/submit': typeof SubmitRoute
  '/reports/$reportId': typeof ReportsReportIdRoute
  '/reports/': typeof ReportsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/development'
    | '/reports'
    | '/showcase'
    | '/submit'
    | '/reports/$reportId'
    | '/reports/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/development'
    | '/showcase'
    | '/submit'
    | '/reports/$reportId'
    | '/reports'
  id:
    | '__root__'
    | '/'
    | '/development'
    | '/reports'
    | '/showcase'
    | '/submit'
    | '/reports/$reportId'
    | '/reports/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DevelopmentRoute: typeof DevelopmentRoute
  ReportsRoute: typeof ReportsRouteWithChildren
  ShowcaseRoute: typeof ShowcaseRoute
  SubmitRoute: typeof SubmitRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DevelopmentRoute: DevelopmentRoute,
  ReportsRoute: ReportsRouteWithChildren,
  ShowcaseRoute: ShowcaseRoute,
  SubmitRoute: SubmitRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/development",
        "/reports",
        "/showcase",
        "/submit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/development": {
      "filePath": "development.tsx"
    },
    "/reports": {
      "filePath": "reports.tsx",
      "children": [
        "/reports/$reportId",
        "/reports/"
      ]
    },
    "/showcase": {
      "filePath": "showcase.tsx"
    },
    "/submit": {
      "filePath": "submit.tsx"
    },
    "/reports/$reportId": {
      "filePath": "reports.$reportId.tsx",
      "parent": "/reports"
    },
    "/reports/": {
      "filePath": "reports.index.tsx",
      "parent": "/reports"
    }
  }
}
ROUTE_MANIFEST_END */
